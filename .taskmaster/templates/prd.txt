Tasks

- Design: Python wrapper to generate Atlas-style graphs from local data (no server)
  - Identify 3 possible designs to graph Atlas ASL requests using the repo’s atlas directory as guidance, but without running the server
  - For each design: summarize approach, dependencies (e.g., matplotlib, pillow, numpy), effort/complexity, fidelity to Atlas styles (themes, palettes, ticks, scales, multi-Y, heatmap), and pros/cons
  - Document how ASL expressions and query params map to the wrapper API (e.g., enums/models → render config)
  - Output static images (PNG) matching Atlas defaults where possible

- Tests + example dataset for local line chart
  - Create a small local example dataset (CSV/JSON) suitable for a simple line chart
  - Add unit tests that: (1) load the dataset, (2) build a render config via models/enums, and (3) render a PNG
  - Include a golden-image or metric-based assertion to validate rendering deterministically
  - Provide a quickstart example referencing the dataset and wrapper API
